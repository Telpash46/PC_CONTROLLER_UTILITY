import os
import platform
import sys
import getpass
import time
import threading
import cv2
import requests
import telebot
import winreg
import tkinter as tk
from tkinter import simpledialog, messagebox
from pathlib import Path
import psutil
import pygetwindow
import subprocess
import pyautogui
import ctypes
import pymsgbox
from telebot import types
from pydub import AudioSegment
import sounddevice as sd
import winsound
import io
import subprocess
import winshell
from win32com.client import Dispatch
import sys


def check_user(message):
    try:
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER")

        # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
        accessmode, _ = winreg.QueryValueEx(key, "AccessMode")
        accesslist, _ = winreg.QueryValueEx(key, "AccessList")
        phonelist, _ = winreg.QueryValueEx(key, "PhoneList")
        phonelist = eval(phonelist)
        accesslist = eval(accesslist)
        ownerid, _ = winreg.QueryValueEx(key, "OwnerId")
        if accessmode != "off":
            print(True)
            if message.from_user.id != int(ownerid):
                if not message.from_user.username:
                    if message.from_user.id in phonelist:
                        if accessmode == "whitelist":
                            return True
                        elif accessmode == "blacklist":
                            bot.reply_to(message, "‚ùåüö® –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É, —Ç–∞–∫ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–∫–ª—é—á–∏–ª —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –≤–Ω—ë—Å –í–∞—Å —Ç—É–¥–∞ (–º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–ø—É—â–µ–Ω—ã –≤—Å–µ, –∫—Ä–æ–º–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö). –ú—ã —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏.")
                            return False
                        else:
                            return True
                    else:
                        if accessmode == "whitelist" or accessmode == "blacklist":
                            bot.reply_to(message, "üëÆ‚Äç‚ôÇÔ∏è –î–æ—Å—Ç—É–ø –≤ –±–æ—Ç–∞ –∑–∞–ø—Ä–µ—â—ë–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ú—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —á—Ç–æ —É –í–∞—Å –Ω–µ—Ç username. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ç—É—Ç: /sharephone –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
                            return False
                        else:
                            return True
                    
                else:
                    if "@"+str(message.from_user.username) in accesslist:
                        if accessmode == "whitelist":
                            return True
                        elif accessmode == "blacklist":
                            bot.reply_to(message, "‚ùåüö® –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É, —Ç–∞–∫ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–∫–ª—é—á–∏–ª —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –≤–Ω—ë—Å –í–∞—Å —Ç—É–¥–∞ (–º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–ø—É—â–µ–Ω—ã –≤—Å–µ, –∫—Ä–æ–º–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö). –ú—ã —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –í–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏.")
                            return False
                        else:
                            return True
                    else:
                        if accessmode == "whitelist":
                            bot.reply_to(message, "‚ùåüö® –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É, —Ç–∞–∫ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–∫–ª—é—á–∏–ª –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ (–º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–ø—É—â–µ–Ω—ã —Ç–æ–ª—å–∫–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ).")
                            return False
                        elif accessmode == "blacklist":
                            return True
                        else:
                            return True
            else:
                return True
        else:
            return True

    except:
        pass


class MyCustomError(Exception):
    def __init__(self, message):
        super().__init__(message)


version = 3
answer = None
popuptitle = ""
popupmessage = ""
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –æ–∫–Ω–∞ Tkinter
root = tk.Tk()
root.withdraw()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ª–æ–≥–æ—Ç–∏–ø–∞
logo_path = "logo.png"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞ –æ–∫–Ω–∞
root.iconphoto(True, tk.PhotoImage(file=logo_path))

ActivationStatus = False
try:
    # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER")

    # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    valuee = winreg.QueryValueEx(key, "ActivationStatus")

    if valuee == "true":
        ActivationStatus = True

    # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    winreg.CloseKey(key)
except FileNotFoundError:

    def ask_for_activation_key(mode):
        keys = requests.get("https://pc-controller.pp.ua/keys.cfg")
        keys = eval(str(keys.text))
        if mode == "again":
            messagebox.showerror(
                "–û–®–ò–ë–ö–ê –í–í–û–î–ê –ö–õ–Æ–ß–ê –ê–ö–¢–ò–í–ê–¶–ò–ò",
                "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–ª–∏ —Å –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –í–∞—à –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
            )
        value = simpledialog.askstring(
            "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
            "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –ø–æ–ª—É—á–µ–Ω—ã–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n–§–æ—Ä–º–∞—Ç –∫–ª—é—á–∞: M5R8P-Q2B1S-G9L6J-V3S7K-WZ0YH.\n–°–û–ë–õ–Æ–î–ê–ô–¢–ï –°–¢–†–û–ì–û –¢–ê–ö–û–ô –§–û–†–ú–ê–¢ –° –î–ï–§–ò–°–ê–ú–ò",
        )
        if value in keys:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.SetValueEx(key, "ActivationStatus", 0, winreg.REG_SZ, "true")

            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.CloseKey(key)

            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.SetValueEx(key, "ActivationKey", 0, winreg.REG_SZ, value)

            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.CloseKey(key)
        else:
            ask_for_activation_key("again")

    ask_for_activation_key("first")
try:
    # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER")

    # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    valuee = winreg.QueryValueEx(key, "BotToken")

    token = valuee[0]

    # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
    winreg.CloseKey(key)
    bot = telebot.TeleBot(str(token))

    try:
        newest_version = requests.get("https://pc-controller.pp.ua/newest_version.cfg")
        if int(str(newest_version.text)) > version:
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ MessageBox
            MessageBox = ctypes.windll.user32.MessageBoxW
            HWND = 0  # –û–∫–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            popuptitle = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
            popupmessage = "–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã PC CONTROLLER, –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –µ—ë? (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –í–∞—à–µ —É—á–∞—Å—Ç–∏–µ)"
            # –í—ã–≤–æ–¥ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
            result = MessageBox(
                HWND, popupmessage, popuptitle, 4, 0x00000001 | 0x00000040
            )
            if result == 6:
                print("yes")
            else:
                print("no")
    except Exception as e:
        print(str(e))

    @bot.message_handler(commands=["defaultinfopopup"])
    def info_popup(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        x = bot.reply_to(message, "–û–ö, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞")
        bot.register_next_step_handler(x, g)

    def g(message):
        global popuptitle, popupmessage
        popuptitle = str(message.text)
        n = bot.reply_to(
            message, "–•–æ—Ä–æ—à–æ, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞–Ω, –∑–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
        )
        bot.register_next_step_handler(n, h)

    def h(message):
        global popuptitle, popupmessage
        popupmessage = str(message.text)

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ MessageBox
        MessageBox = ctypes.windll.user32.MessageBoxW
        HWND = 0  # –û–∫–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        # –í—ã–≤–æ–¥ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        MessageBox(HWND, popupmessage, popuptitle, 0, 0x00000001 | 0x00000040)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî Popup –≤—ã—Å–∫–æ—á–∏–ª",
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.callback_query_handler(func=lambda call: True)
    def handle_callback(call):
        message = call.message
        if call.data == "block_input":
            user32 = ctypes.windll.user32
            user32.BlockInput(True)
            markup = types.InlineKeyboardMarkup(row_width=2)
            button1 = types.InlineKeyboardButton(
                "üö´‚ö† –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –æ—Ç —Å–ª–æ–≤–∞ —Å–æ–≤—Å–µ–º (–∫—Ä–æ–º–µ —Ñ–∏–∑. –∫–Ω–æ–ø–æ–∫)",
                callback_data="block_input",
            )
            button2 = types.InlineKeyboardButton(
                "‚úî‚ö† –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ", callback_data="allow_input"
            )
            markup.add(button1, button2)
            try:
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="üö® –í—ã –∑–∞—à–ª–∏ –≤ –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–≤–æ–¥–æ–º –Ω–∞ —Å–≤–æ–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ. –í–í–û–î –°–ï–ô–ß–ê–° –ó–ê–ö–†–´–¢",
                    reply_markup=markup,
                )
            except:
                pass

        elif call.data == "allow_input":
            user32 = ctypes.windll.user32
            user32.BlockInput(False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            button1 = types.InlineKeyboardButton(
                "üö´‚ö† –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –æ—Ç —Å–ª–æ–≤–∞ —Å–æ–≤—Å–µ–º (–∫—Ä–æ–º–µ —Ñ–∏–∑. –∫–Ω–æ–ø–æ–∫)",
                callback_data="block_input",
            )
            button2 = types.InlineKeyboardButton(
                "‚úî‚ö† –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ", callback_data="allow_input"
            )
            markup.add(button1, button2)
            try:
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="üö® –í—ã –∑–∞—à–ª–∏ –≤ –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–≤–æ–¥–æ–º –Ω–∞ —Å–≤–æ–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ. –í–í–û–î –°–ï–ô–ß–ê–° –û–¢–ö–†–´–¢",
                    reply_markup=markup,
                )
            except:
                pass
        elif call.data == "disable_access_list":
            dir = winreg.HKEY_CURRENT_USER  # –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª
            tree = r"Software\Pavelo\PC_CONTROLLER"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—É
            try:
                key = winreg.OpenKey(dir, tree, 0, winreg.KEY_WRITE)
                winreg.SetValue(key, "AccessMode", winreg.REG_SZ, 0, "off")
                bot.edit_message_text(
                    "–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )
            except:
                key = winreg.CreateKey(
                    winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
                )

                # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.SetValueEx(key, "AccessMode", 0, winreg.REG_SZ, "off")

                # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.CloseKey(key)
                bot.edit_message_text(
                    "–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )
        elif call.data == "white_list_mode":
            dir = winreg.HKEY_CURRENT_USER  # –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª
            tree = r"Software\Pavelo\PC_CONTROLLER"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—É
            try:
                key = winreg.OpenKey(dir, tree, 0, winreg.KEY_WRITE)
                winreg.SetValue(key, "AccessMode", winreg.REG_SZ, 0, "whitelist")
                bot.edit_message_text(
                    "–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –≤ –±–µ–ª—ã–π —Ä–µ–∂–∏–º (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–∞–º –∏ –í–∞–º –≤ —Ç–æ–º —á–∏—Å–ª–µ)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )
            except:
                key = winreg.CreateKey(
                    winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
                )

                # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.SetValueEx(key, "AccessMode", 0, winreg.REG_SZ, "whitelist")

                # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.CloseKey(key)
                bot.edit_message_text(
                    "–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –≤ –±–µ–ª—ã–π —Ä–µ–∂–∏–º (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–∞–º –∏ –í–∞–º –≤ —Ç–æ–º —á–∏—Å–ª–µ)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )
        elif call.data == "black_list_mode":
            dir = winreg.HKEY_CURRENT_USER  # –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª
            tree = r"Software\Pavelo\PC_CONTROLLER"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—É
            try:
                key = winreg.OpenKey(dir, tree, 0, winreg.KEY_WRITE)
                winreg.SetValue(key, "AccessMode", winreg.REG_SZ, 0, "blacklist")
                bot.edit_message_text(
                    "–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –≤ —á–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º, –∫—Ä–æ–º–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–µ)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )
            except:
                key = winreg.CreateKey(
                    winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
                )

                # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.SetValueEx(key, "AccessMode", 0, winreg.REG_SZ, "blacklist")

                # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                winreg.CloseKey(key)
                bot.edit_message_text(
                    "–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –≤ —á–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º (—Ç–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º, –∫—Ä–æ–º–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–µ)",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                )

    @bot.message_handler(commands=["sharephone"])
    def handle_sharephone(message):
        markup = telebot.types.ReplyKeyboardMarkup(
            one_time_keyboard=True, resize_keyboard=True
        )
        item = telebot.types.KeyboardButton(
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True
        )
        markup.add(item)
        bot.reply_to(
            message,
            "üëá –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ –í–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —ç—Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–∞—è –∏ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—É–Ω—Ç–µ—Ñ–∏–∫–∞—Ü–∏–∏",
            reply_markup=markup,
        )

    @bot.message_handler(content_types=["contact"])
    def contact_received(message):
        contact = message.contact
        phones = {}
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER")
        try:
            phones, _ = winreg.QueryValueEx(key, "PhoneList")
            phones = eval(phones)
        except:
            pass
        winreg.CloseKey(key)
        phones[message.from_user.id] = contact.phone_number
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
        key = winreg.CreateKey(
            winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
        )
        winreg.CreateKey(key, "PhoneList")
        # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
        winreg.SetValueEx(key, "PhoneList", 0, winreg.REG_SZ, str(phones))
        # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
        winreg.CloseKey(key)
        bot.reply_to(message, "‚úî –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª—ë–Ω —É—Å–ø–µ—à–Ω–æ")

    @bot.message_handler(commands=["iamowner"])
    def handle_iamowner(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        try:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.OpenKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            owner_id, _ = winreg.QueryValueEx(key, "OwnerId")
            if int(owner_id) == message.from_user.id:
                bot.reply_to(message, "‚ùå –í—ã –∏ —Ç–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü.")
            else:
                bot.reply_to(
                    message,
                    "üëÆ‚Äç‚ôÇÔ∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —Å—Ç–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º, —Ç–∞–∫ –∫–∞–∫ –∏–º —Å—Ç–∞–ª —É–∂–µ –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫.",
                )
        except:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.SetValueEx(
                key, "OwnerId", 0, winreg.REG_SZ, str(message.from_user.id)
            )

            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.CloseKey(key)
            bot.reply_to(
                message,
                "ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ–ø–µ—Ä—å –í—ã –≤–ª–∞–¥–µ–ª–µ—Ü (–¥–æ—Å—Ç—É–ø–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±—É–¥–µ—Ç –±–æ–ª—å—à–µ–µ) –∏ –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –∏–º —Å—Ç–∞—Ç—å, –¥–∞–∂–µ –ø—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ /settings",
            )

    @bot.message_handler(commands=["settings"])
    def handle_settings(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        try:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.OpenKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            owner_id, _ = winreg.QueryValueEx(key, "OwnerId")
            if int(owner_id) == message.from_user.id:
                bot.reply_to(
                    message,
                    "üëÆ‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, "
                    + str(message.from_user.first_name)
                    + ".\n\n/changeaccessmode - –ü–æ–º–µ–Ω—è—Ç—å —Ä–µ–∂–∏–º –º–µ–∂–¥—É —á–µ—Ä–Ω—ã–º –∏ –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º.\n/editlist - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –ø–æ–º–µ–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ –±–µ–ª—ã–π –∏–ª–∏ —á–µ—Ä–Ω—ã–π –æ–Ω).\n\n–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.",
                )
            else:
                bot.reply_to(
                    message,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –º–µ–Ω—é, —Ç–∞–∫ –∫–∞–∫ –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.",
                )
        except Exception as e:
            print(e)
            bot.reply_to(
                message,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –º–µ–Ω—é, —Ç–∞–∫ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /iamowner",
            )

    @bot.message_handler(commands=["changeaccessmode"])
    def handle_accessmode(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        try:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.OpenKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            accessMode, _ = winreg.QueryValueEx(key, "AccessMode")
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton(
                "üè≥ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫", callback_data="white_list_mode"
            )
            button2 = types.InlineKeyboardButton(
                "üè¥ –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", callback_data="black_list_mode"
            )
            button3 = types.InlineKeyboardButton(
                "üîï –û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="disable_access_list"
            )
            markup.add(button1, button2, button3)

            if accessMode == "whitelist":
                bot.reply_to(
                    message,
                    "‚ö† –°–µ–π—á–∞—Å —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ —Å—Ç–æ–∏—Ç: –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫.\n\n–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º —Å–º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–∫–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.",
                    reply_markup=markup,
                )
            elif accessMode == "blacklist":
                bot.reply_to(
                    message,
                    "‚ö† –°–µ–π—á–∞—Å —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ —Å—Ç–æ–∏—Ç: —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.\n\n–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º —Å–º–æ–≥—É—Ç –≤—Å–µ, –∫—Ä–æ–º–µ —É–∫–∞–∑–∞–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤.\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.",
                    reply_markup=markup,
                )
            elif accessMode == "off":
                bot.reply_to(
                    message,
                    "‚ö† –°–µ–π—á–∞—Å —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ",
                    reply_markup=markup,
                )

        except:
            markup1 = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton(
                "üè≥ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫", callback_data="white_list_mode"
            )
            button2 = types.InlineKeyboardButton(
                "üè¥ –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", callback_data="black_list_mode"
            )
            button3 = types.InlineKeyboardButton(
                "üîï –û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="disable_access_list"
            )
            markup1.add(button1, button2, button3)
            bot.reply_to(
                message,
                "‚ö† –°–µ–π—á–∞—Å —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ",
                reply_markup=markup1,
            )

    def listeditortrue(message):
        # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞

        key = winreg.OpenKey(
            winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER", winreg.KEY_READ
        )
        accesslist, _ = winreg.QueryValueEx(key, "AccessList")
        accesslist = eval(accesslist)
        winreg.CloseKey(key)  # –ó–∞–∫—Ä—ã—Ç—å –∫–ª—é—á –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è

        listtoout = ""
        counter = 0
        for i in accesslist:
            counter += 1
            listtoout += str(counter) + ". " + str(i) + "\n"

        if (
            message.reply_to_message
            and counter >= 1
            and message.reply_to_message.text
            == "üìÉ –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –≤–Ω–µ—Å–µ–Ω –≤ –ª–∏–±–æ –≤ —á—ë—Ä–Ω—ã–π –ª–∏–±–æ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: \n\n"
            + str(listtoout)
            + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n- @username  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É)\n- +1234567890  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏."
        ):
            operator, person = map(str, message.text.split())
            print(operator)
            print(person)

            # –û–ø—è—Ç—å –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –∑–∞–ø–∏—Å–∏
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            if operator == "+":
                accesslist.append(person)
                accesslist_str = ",".join(map(str, accesslist))
                winreg.SetValueEx(key, "AccessList", 0, winreg.REG_SZ, str(accesslist))
                bot.reply_to(
                    message,
                    "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ "
                    + person
                    + " –≤ —Å–ø–∏—Å–æ–∫. –°–ø–∏—Å–æ–∫ —É–∂–µ –∏–∑–º–µ–Ω—ë–Ω –∏ –∂–¥–µ—Ç –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–≤–æ–¥–∞",
                )
                # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                accesslist, _ = winreg.QueryValueEx(key, "AccessList")
                accesslist = eval(accesslist)
                listtoout = ""
                counter = 1
                for i in accesslist:
                    listtoout += str(counter) + ". " + str(i) + "\n"
                    counter += 1
                txt = (
                    "üìÉ –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –≤–Ω–µ—Å–µ–Ω –≤ –ª–∏–±–æ –≤ —á—ë—Ä–Ω—ã–π –ª–∏–±–æ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: \n\n"
                    + str(listtoout)
                    + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n- @username  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É)\n- +1234567890  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏."
                )
                g = bot.edit_message_text(
                    chat_id=message.chat.id,
                    message_id=message.reply_to_message.id,
                    text=txt,
                )
                bot.register_next_step_handler(g, listeditortrue)
            elif operator == "-":
                try:
                    accesslist.remove(person)
                    winreg.SetValueEx(
                        key, "AccessList", 0, winreg.REG_SZ, str(accesslist)
                    )
                    bot.reply_to(
                        message,
                        "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ "
                        + person
                        + " –∏–∑ —Å–ø–∏—Å–∫–∞. –°–ø–∏—Å–æ–∫ —É–∂–µ –∏–∑–º–µ–Ω—ë–Ω –∏ –∂–¥–µ—Ç –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–≤–æ–¥–∞",
                    )
                    # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                    accesslist, _ = winreg.QueryValueEx(key, "AccessList")
                    accesslist = eval(accesslist)
                    listtoout = ""
                    counter = 1
                    for i in accesslist:
                        listtoout += str(counter) + ". " + str(i) + "\n"
                        counter += 1
                    txt = (
                        "üìÉ –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –≤–Ω–µ—Å–µ–Ω –≤ –ª–∏–±–æ –≤ —á—ë—Ä–Ω—ã–π –ª–∏–±–æ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: \n\n"
                        + str(listtoout)
                        + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n- @username  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É)\n- +1234567890  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏."
                    )
                    g = bot.edit_message_text(
                        chat_id=message.chat.id,
                        message_id=message.reply_to_message.id,
                        text=txt,
                    )
                except:
                    g = bot.reply_to(
                        message, "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É"
                    )
                bot.register_next_step_handler(g, listeditortrue)

            winreg.CloseKey(key)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏

    def listeditorfalse(message):
        accesslist = []
        if (
            message.reply_to_message
            and message.reply_to_message.text
            == "‚ùó –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–∞—Ö."
            + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏."
        ):
            operator, person = map(str, message.text.split())
            print(operator)
            print(person)

            # –û–ø—è—Ç—å –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –∑–∞–ø–∏—Å–∏
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            if operator == "+":
                accesslist.append(person)
                accesslist_str = ",".join(map(str, accesslist))
                winreg.SetValueEx(key, "AccessList", 0, winreg.REG_SZ, str(accesslist))
                bot.reply_to(
                    message,
                    "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ "
                    + person
                    + " –≤ —Å–ø–∏—Å–æ–∫. –°–ø–∏—Å–æ–∫ —É–∂–µ –∏–∑–º–µ–Ω—ë–Ω –∏ –∂–¥–µ—Ç –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–≤–æ–¥–∞",
                )
                # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
                accesslist, _ = winreg.QueryValueEx(key, "AccessList")
                accesslist = eval(accesslist)
                listtoout = ""
                counter = 1
                for i in accesslist:
                    listtoout += str(counter) + ". " + str(i) + "\n"
                    counter += 1
                txt = (
                    "üìÉ –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –≤–Ω–µ—Å–µ–Ω –≤ –ª–∏–±–æ –≤ —á—ë—Ä–Ω—ã–π –ª–∏–±–æ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: \n\n"
                    + str(listtoout)
                    + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n- @username  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É)\n- +1234567890  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏."
                )
                g = bot.edit_message_text(
                    chat_id=message.chat.id,
                    message_id=message.reply_to_message.id,
                    text=txt,
                )
                bot.register_next_step_handler(g, listeditortrue)
            elif operator == "-":
                g = bot.reply_to(
                    message,
                    "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                )
                bot.register_next_step_handler(g, listeditorfalse)
            winreg.CloseKey(key)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏

    @bot.message_handler(commands=["editlist"])
    def handle_listeditor(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        try:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.OpenKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            accesslist, _ = winreg.QueryValueEx(key, "AccessList")
            accesslist = eval(accesslist)
            listtoout = ""
            counter = 1
            for i in accesslist:
                listtoout += str(counter) + ". " + str(i) + "\n"
                counter += 1
            if len(accesslist) > 0:
                pass
            else:
                raise MyCustomError("–ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–µ!")
            x = bot.reply_to(
                message,
                "üìÉ –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –≤–Ω–µ—Å–µ–Ω –≤ –ª–∏–±–æ –≤ —á—ë—Ä–Ω—ã–π –ª–∏–±–æ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: \n\n"
                + str(listtoout)
                + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n- @username  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É)\n- +1234567890  (—É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏.",
            )
            bot.register_next_step_handler(x, listeditortrue)
        except:
            x = bot.reply_to(
                message,
                "‚ùó –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–∞—Ö."
                + "\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n+ @username  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–Ω—ç–π–º)\n+ +1234567890  (–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É).\n\n‚Äº –í —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —é–∑–µ—Ä–Ω—ç–π–º–∞, —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –∞ –≤ —Å–ª—É—á–∞–µ —Å –Ω–æ–º–µ—Ä–æ–º - –∏–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏.",
            )
            bot.register_next_step_handler(x, listeditorfalse)

    @bot.message_handler(commands=["warningpopup"])
    def info_popup(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        x = bot.reply_to(message, "–û–ö, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞")
        bot.register_next_step_handler(x, gc)

    def gc(message):
        global popuptitle, popupmessage
        popuptitle = str(message.text)
        n = bot.reply_to(
            message,
            "–•–æ—Ä–æ—à–æ, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞–Ω, –∑–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
        )
        bot.register_next_step_handler(n, hc)

    def hc(message):
        global popuptitle, popupmessage
        popupmessage = str(message.text)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ user32.dll
        user32 = ctypes.windll.user32

        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ç–∏–ø–∞ –æ–∫–Ω–∞ –∏ –∫–Ω–æ–ø–æ–∫
        MB_OK = 0x00000000
        MB_ICONWARNING = 0x00000030

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ MessageBoxW –∏–∑ user32.dll
        result = user32.MessageBoxW(
            None, popupmessage, popuptitle, MB_OK | MB_ICONWARNING
        )

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–∏–π Popup –≤—ã—Å–∫–æ—á–∏–ª",
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["controlinput"])
    def control_input(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton(
            "üö´‚ö† –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –æ—Ç —Å–ª–æ–≤–∞ —Å–æ–≤—Å–µ–º (–∫—Ä–æ–º–µ —Ñ–∏–∑. –∫–Ω–æ–ø–æ–∫)",
            callback_data="block_input",
        )
        button2 = types.InlineKeyboardButton(
            "‚úî‚ö† –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ", callback_data="allow_input"
        )
        markup.add(button1, button2)
        bot.reply_to(
            message,
            "üö® –í—ã –∑–∞—à–ª–∏ –≤ –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–≤–æ–¥–æ–º –Ω–∞ —Å–≤–æ–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ. –ù–ï–ò–ó–í–ï–°–¢–ù–û –û–¢–ö–†–´–¢ –õ–ò –°–ï–ô–ß–ê–° –í–í–û–î",
            reply_markup=markup,
        )

    @bot.message_handler(commands=["inputpopup"])
    def info_popup(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        x = bot.reply_to(message, "–û–ö, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞")
        bot.register_next_step_handler(x, gcc)

    def gcc(message):
        
        global popuptitle, popupmessage
        popuptitle = str(message.text)
        n = bot.reply_to(
            message, "–•–æ—Ä–æ—à–æ, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞–Ω, –∑–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–≤–æ–¥–∞"
        )
        bot.register_next_step_handler(n, hcc)

    def hcc(message):
        
        global popuptitle, popupmessage, answer
        popupmessage = str(message.text)
        user_input = pymsgbox.prompt(popupmessage, popuptitle)
        user_id = message.from_user.id

        print(user_input)
        if user_input == None:
            user_input = "–æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ"

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî Popup –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤—ã—Å–∫–æ—á–∏–ª, –æ—Ç–≤–µ—Ç: " + str(user_input),
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["okcancelpopup"])
    def info_popup(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        x = bot.reply_to(message, "–û–ö, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞")
        bot.register_next_step_handler(x, gb)

    def gb(message):
        
        global popuptitle, popupmessage
        popuptitle = str(message.text)
        n = bot.reply_to(
            message,
            "–•–æ—Ä–æ—à–æ, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞–Ω, –∑–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –û–ö / –û–¢–ú–ï–ù–ê",
        )
        bot.register_next_step_handler(n, hb)

    def hb(message):
        
        global popuptitle, popupmessage
        popupmessage = str(message.text)

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ MessageBox
        MessageBox = ctypes.windll.user32.MessageBoxW
        HWND = 0  # –û–∫–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        # –í—ã–≤–æ–¥ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        result = MessageBox(HWND, popupmessage, popuptitle, 1, 0x00000001 | 0x00000040)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if result == 1:  # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "OK"
            btn = "–û–ö"
        elif result == 2:  # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "Cancel"
            btn = "–û–¢–ú–ï–ù–ê / –ó–ê–ö–†–´–¢–ò–ï"
        else:  # –ï—Å–ª–∏ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –±–µ–∑ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
            btn = "–ù–ò–ö–ê–ö–ê–Ø"
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî Popup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –û–ö / –û–¢–ú–ï–ù–ê –≤—ã—Å–∫–æ—á–∏–ª, –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "
                + str(btn),
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["reboot"])
    def reboot(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        os.system("shutdown /r /t 0")
        time.sleep(1)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["shutdown"])
    def reboot(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        os.system("shutdown /s /t 0")
        time.sleep(1)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["lock"])
    def lock_workstation(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        subprocess.call("rundll32.exe user32.dll,LockWorkStation")
        time.sleep(2)
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é pyautogui
        screenshot = pyautogui.screenshot()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ —Ñ–∞–π–ª
        screenshot_path = "screenshot.png"
        screenshot.save(screenshot_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram
        with open(screenshot_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption="‚úî –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                reply_to_message_id=message.message_id,
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        os.remove(screenshot_path)

    @bot.message_handler(commands=["system_info"])
    def send_sys_info(message):
        global version
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
        system_info = platform.uname()
        system_info_str = (
            f"–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: {version}\n"
            f"–°–∏—Å—Ç–µ–º–∞: {system_info.system}\n"
            f"–£–∑–µ–ª: {system_info.node}\n"
            f"–í—ã–ø—É—Å–∫: {system_info.release}\n"
            f"–í–µ—Ä—Å–∏—è: {system_info.version}\n"
            f"–ú–∞—à–∏–Ω–∞: {system_info.machine}\n"
            f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {system_info.processor}\n"
        )

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ CPU
        cpu_count = psutil.cpu_count()
        cpu_freq = psutil.cpu_freq()
        cpu_percent = psutil.cpu_percent(interval=1, percpu=True)

        cpu_info_str = (
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤: {cpu_count}\n"
            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: {cpu_freq.max:.2f} –ú–ì—Ü\n"
            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: {cpu_freq.min:.2f} –ú–ì—Ü\n"
            f"–°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: {sum(cpu_percent) / cpu_count:.2f}%\n"
        )

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–º—è—Ç–∏
        memory_info = psutil.virtual_memory()
        memory_info_str = (
            f"–í—Å–µ–≥–æ –ø–∞–º—è—Ç–∏: {memory_info.total / 2 ** 30:.2f} –ì–ë\n"
            f"–î–æ—Å—Ç—É–ø–Ω–æ –ø–∞–º—è—Ç–∏: {memory_info.available / 2 ** 30:.2f} –ì–ë\n"
            f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: {memory_info.percent:.2f}%\n"
        )

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = f"{system_info_str}\n{cpu_info_str}\n{memory_info_str}"

        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 1024 —Å–∏–º–≤–æ–ª–∞, –æ–±—Ä–µ–∑–∞–µ–º –µ–≥–æ
        if len(message_text) > 1024:
            message_text = message_text[:1020] + "..."

        message_text = message_text + "\n\n–û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:\n"
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ–∫–æ–Ω
        open_windows = pygetwindow.getAllTitles()

        # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        for window in open_windows:
            message_text = message_text + str(window) + "\n"

        bot.reply_to(message, str(message_text))

    @bot.message_handler(commands=["camera"])
    def send_photo(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        # –ó–∞—Ö–≤–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∫–∞–º–µ—Ä—ã
        camera = cv2.VideoCapture(0)
        return_value, image = camera.read()
        camera.release()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫
        image_path = "photo.jpg"
        cv2.imwrite(image_path, image)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram
        with open(image_path, "rb") as photo:
            bot.send_photo(
                message.chat.id, photo, reply_to_message_id=message.message_id
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        os.remove(image_path)

    # Handle '/start' command
    @bot.message_handler(commands=["start"])
    def handle_start(message):
        a=check_user(message)
        if a:
            pass
        else:
            return 0
        bot.reply_to(
            message,
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, "
            + str(message.from_user.first_name)
            + "!\n\nü•≥ –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –í–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä —Å–µ–π—á–∞—Å –≤–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å—å—é <em>"
            + str(getpass.getuser())
            + "</em>. –¢—É—Ç –í—ã –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –ù–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é.\n\n/camera - —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–º–µ—Ä—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—é–¥–∞\n/system_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ\n/lock - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä —É–¥–∞–ª—ë–Ω–Ω–æ\n/defaultinfopopup - –≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö\n/okcancelpopup - –≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö / –û–¢–ú–ï–ù–ê (–Ω–∞–∂–∞—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–π–¥–µ—Ç —Å—é–¥–∞)\n/warningpopup - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö\n/inputpopup - –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å –≤–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ü–ö (–æ—Ç–≤–µ—Ç –ø—Ä–∏–π–¥–µ—Ç —Å—é–¥–∞)\n/shutdown - –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n/reboot - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n/controlinput - –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –≤–≤–æ–¥–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ",
            parse_mode="HTML",
        )
    bot.set_my_commands([
                types.BotCommand("start", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"),
                types.BotCommand("iamowner", "–Ø –≤–ª–∞–¥–µ–ª–µ—Ü"),
                types.BotCommand("settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
                types.BotCommand("sharephone", "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –±–æ—Ç–æ–º"),
                types.BotCommand("camera", "—Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–º–µ—Ä—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—é–¥–∞"),
                types.BotCommand("system_info", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"),
                types.BotCommand("lock", "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä —É–¥–∞–ª—ë–Ω–Ω–æ"),
                types.BotCommand("defaultinfopopup", "–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö"),
                types.BotCommand("okcancelpopup", "–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö / –û–¢–ú–ï–ù–ê (–Ω–∞–∂–∞—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–π–¥–µ—Ç —Å—é–¥–∞)"),
                types.BotCommand("warningpopup", "–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –û–ö"),
                types.BotCommand("inputpopup", "–í—ã–≤–µ—Å—Ç–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å –≤–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ü–ö (–æ—Ç–≤–µ—Ç –ø—Ä–∏–π–¥–µ—Ç —Å—é–¥–∞)"),
                types.BotCommand("shutdown", "–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä"),
                types.BotCommand("reboot", "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä"),
                types.BotCommand("controlinput", "–ü—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –≤–≤–æ–¥–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"),
                
                ])
    # Start the bot
    bot.polling()
except FileNotFoundError:

    def token_ask_after_install(mode):
        if mode == "again":
            messagebox.showerror(
                "–û–®–ò–ë–ö–ê –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò",
                "–í–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω—É –±–æ—Ç–æ–≤ –≤ Telegram.\n\n–ü—Ä–∏–º–µ—Ä —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–æ–≤ –≤ Telegram: 1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –í–∞—à —Ç–æ–∫–µ–Ω –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
            )
        value = simpledialog.askstring(
            "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
            "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è –í–∞—à–µ–≥–æ –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω—ã–π –≤ @BotFather –≤ Telegram. –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¢–û–õ–¨–ö–û –Ω–∞ –í–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, –º—ã –Ω–µ —Å–º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø",
        )

        if value == None or len(value) < 46:
            token_ask_after_install("again")
        else:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            key = winreg.CreateKey(
                winreg.HKEY_CURRENT_USER, r"Software\Pavelo\PC_CONTROLLER"
            )

            # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
            winreg.SetValueEx(key, "BotToken", 0, winreg.REG_SZ, value)



            # –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–ª—é—á —Ä–µ–µ—Å—Ç—Ä–∞
            phonelist = {}
            winreg.SetValueEx(key, "PhoneList", 0, winreg.REG_SZ, str("{}"))

            
            winreg.SetValueEx(key, "AccessMode", 0, winreg.REG_SZ, str("off"))

            
            accesslist = []
            winreg.SetValueEx(key, "AccessList", 0, winreg.REG_SZ, str(accesslist))
            winreg.SetValueEx(key, "OwnerId", 0, winreg.REG_SZ, str(""))

            result = messagebox.askyesno(
                "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
                "–í—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—Å–∫–∞–ª–∞—Å—å –≤–º–µ—Å—Ç–µ —Å —Å–∏—Å—Ç–µ–º–æ–π?!",
            )
            if result:
                script_path = os.path.realpath(__file__)
                desktop_path = (
                    str(os.getenv("APPDATA"))
                    + "\Microsoft\Windows\Start Menu\Programs\Startup"
                )
                shell = Dispatch("WScript.Shell")
                shortcut = shell.CreateShortcut(desktop_path + "\\PC_CONTROLLER.lnk")
                shortcut.TargetPath = script_path
                shortcut.WorkingDirectory = desktop_path
                shortcut.IconLocation = str(os.getcwd()) + "/logo.ico"
                shortcut.Save()
                messagebox.showwarning(
                    "–í–Ω–∏–º–∞–Ω–∏–µ",
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ï—Å–ª–∏ –í—ã —Å—Ç–∞–≤–∏—Ç–µ —ç—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—É –≤–ø–µ—Ä–≤—ã–µ –Ω–∞ —ç—Ç—É —Å–∏—Å—Ç–µ–º—É, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —É –í–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –í–ª–∞–¥–µ–ª–µ—Ü (—Ç–æ—Ç, –∫—Ç–æ —Å–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –≤ –±—É–¥—É—â–µ–º). –≠—Ç–æ –æ—á–µ–Ω—å –æ–ø–∞—Å–Ω–æ, –µ—Å–ª–∏ –í—ã –¥–∞–¥–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤. –ú—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞.\n\n–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω), –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –∏ –≤–≤–µ–¥–∏—Ç–µ /iamowner. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É –í–∞—Å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ –∏ —Ç–æ–ª—å–∫–æ —Å –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º–∏.",
                )
                messagebox.showinfo(
                    "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
                    "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä",
                )
            else:
                result = messagebox.askyesno(
                    "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
                    "–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —è—Ä–ª—ã–∫ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ?!",
                )
                if result:
                    script_path = os.path.realpath(__file__)
                    desktop_path = winshell.desktop()
                    shell = Dispatch("WScript.Shell")
                    shortcut = shell.CreateShortcut(
                        desktop_path + "\\PC_CONTROLLER.lnk"
                    )
                    shortcut.TargetPath = script_path
                    shortcut.WorkingDirectory = desktop_path
                    shortcut.IconLocation = str(os.getcwd()) + "/logo.ico"
                    shortcut.Save()

                else:
                    pass
                messagebox.showwarning(
                    "–í–Ω–∏–º–∞–Ω–∏–µ",
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ï—Å–ª–∏ –í—ã —Å—Ç–∞–≤–∏—Ç–µ —ç—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—É –≤–ø–µ—Ä–≤—ã–µ –Ω–∞ —ç—Ç—É —Å–∏—Å—Ç–µ–º—É, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —É –í–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –í–ª–∞–¥–µ–ª–µ—Ü (—Ç–æ—Ç, –∫—Ç–æ —Å–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –≤ –±—É–¥—É—â–µ–º). –≠—Ç–æ –æ—á–µ–Ω—å –æ–ø–∞—Å–Ω–æ, –µ—Å–ª–∏ –í—ã –¥–∞–¥–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –±–æ—Ç—É –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤. –ú—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞.\n\n–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω), –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –∏ –≤–≤–µ–¥–∏—Ç–µ /iamowner. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É –í–∞—Å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ –∏ —Ç–æ–ª—å–∫–æ —Å –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º–∏.",
                )
                
                messagebox.showinfo(
                    "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
                    "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É",
                )

    token_ask_after_install("first")
